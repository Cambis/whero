name: Validate release candidate 🧐
on:
  pull_request:
    branches:
      - deploy-production
jobs:
  validate-release:
    runs-on: ubuntu-20.04
    steps:
      - name: Check if pull request is mergeable
        env:
          RELEASE_CANDIDATE: ${{ contains(github.head_ref, 'release/') }}
          HOTIFIX_CANDIDATE: ${{ contains(github.head_ref, 'hotfix/') }}
        run: |
          if [[ ${RELEASE_CANDIDATE} == true ]]; then
            exit 0;
          elif [[ ${HOTIFIX_CANDIDATE} == true ]]; then
            exit 0;
          else
            echo "Only branches with the names 'release/**' or 'hotfix/** are allowed!"
            exit 1;
          fi;
      - name: Set major release
        if: ${{ contains(github.event.pull_request.labels.*.name, 'release major') }}
        run: echo "RELEASE=major" >> ${GITHUB_ENV}
      - name: Set minor release
        if: ${{ contains(github.event.pull_request.labels.*.name, 'release minor')  }}
        run: echo "RELEASE=minor" >> ${GITHUB_ENV}
      - name: Set patch release
        if: ${{ contains(github.event.pull_request.labels.*.name, 'release patch')  }}
        run: echo "RELEASE=patch" >> ${GITHUB_ENV}
      - name: Check release env
        run: |
          if [[ -z "${{ env.RELEASE }}" ]]; then
            echo "You need to set a release label on PRs to the production branch";
            exit 1;
          else
            exit 0;
          fi
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Initialize mandatory git config
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git fetch
          git checkout ${{ github.event.pull_request.head.ref }}
      - name: Bump package version
        run: |
          yarn version --${{ env.RELEASE }} --no-git-tag-version
      - name: Commit changes
        run: |
          git add package.json
          git commit -m "Bump version ${{ env.RELEASE }}"
      - name: Push changes
        run: |
          git push

